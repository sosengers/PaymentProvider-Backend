# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from paymentprovider.models.base_model_ import Model
from paymentprovider import util


class PaymentCreationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, redirect_page=None, transaction_id=None):  # noqa: E501
        """PaymentCreationResponse - a model defined in OpenAPI

        :param redirect_page: The redirect_page of this PaymentCreationResponse.  # noqa: E501
        :type redirect_page: str
        :param transaction_id: The transaction_id of this PaymentCreationResponse.  # noqa: E501
        :type transaction_id: str
        """
        self.openapi_types = {
            'redirect_page': str,
            'transaction_id': str
        }

        self.attribute_map = {
            'redirect_page': 'redirect_page',
            'transaction_id': 'transaction_id'
        }

        self._redirect_page = redirect_page
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentCreationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentCreationResponse of this PaymentCreationResponse.  # noqa: E501
        :rtype: PaymentCreationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def redirect_page(self):
        """Gets the redirect_page of this PaymentCreationResponse.


        :return: The redirect_page of this PaymentCreationResponse.
        :rtype: str
        """
        return self._redirect_page

    @redirect_page.setter
    def redirect_page(self, redirect_page):
        """Sets the redirect_page of this PaymentCreationResponse.


        :param redirect_page: The redirect_page of this PaymentCreationResponse.
        :type redirect_page: str
        """
        if redirect_page is None:
            raise ValueError("Invalid value for `redirect_page`, must not be `None`")  # noqa: E501
        if redirect_page is not None and len(redirect_page) < 1:
            raise ValueError("Invalid value for `redirect_page`, length must be greater than or equal to `1`")  # noqa: E501

        self._redirect_page = redirect_page

    @property
    def transaction_id(self):
        """Gets the transaction_id of this PaymentCreationResponse.


        :return: The transaction_id of this PaymentCreationResponse.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this PaymentCreationResponse.


        :param transaction_id: The transaction_id of this PaymentCreationResponse.
        :type transaction_id: str
        """
        if transaction_id is None:
            raise ValueError("Invalid value for `transaction_id`, must not be `None`")  # noqa: E501

        self._transaction_id = transaction_id
